library(ggplot2)
library(dplyr)
data(diamonds)
summary(diamonds)
clarity_groups <- group_by(diamonds, clarity)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n()) %>%
arrange(clarity)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price)*1.,
min_price = min(price),
max_price = max(price),
n = n()) %>%
arrange(clarity)
```
View(clarity_groups)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
View(diamondsByClarity)
?geom_histogram
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(x=clarity)) + geom_histogram()
p1
?gridExtra
??gridExtra
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(x=clarity)) + geom_histogram()
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
p2 <- ggplot(data=diamonds_mp_by_clarity, aes(x=cut)) + geom_histogram()
library(gridExtra)
grid.arrange(p1,p2, ncol=1)
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
p2 <- ggplot(data=diamonds_mp_by_color, aes(x=color)) + geom_histogram()
library(gridExtra)
grid.arrange(p1,p2, ncol=1)
?geom_histogram
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(x=clarity)) + geom_histogram(weight=price)
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(x=clarity)) + geom_histogram(weight=diamonds$price)
p2 <- ggplot(data=diamonds_mp_by_color, aes(x=color)) + geom_histogram(weight=diamonds$price)
grid.arrange(p1,p2, ncol=1)
p1
p2
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(x=clarity)) + geom_histogram(aes(weight=price))
p2 <- ggplot(data=diamonds_mp_by_color, aes(x=color)) + geom_histogram(aes(weight=price))
grid.arrange(p1,p2, ncol=1)
p1 <- ggplot(data=diamonds_mp_by_clarity, aes(x=clarity)) + geom_histogram(aes(weight=mean_price))
p2 <- ggplot(data=diamonds_mp_by_color, aes(x=color)) + geom_histogram(aes(weight=mean_price))
grid.arrange(p1,p2, ncol=1)
p2 <- qplot(color, data=diamonds_mp_by_color, geom ="bar", weight=mean_price)
grid.arrange(p1,p2, ncol=1)
?diamonds
diamonds_by_cut <- group_by(diamonds, cut)
diamonds_mp_by_cut <- summarise(diamonds_by_cut, mean_price = mean(price))
p3 <- qplot(cut, data=diamonds_mp_by_cut, geom ="bar", weight=mean_price)
grid.arrange(p1,p2,p3 ncol=1)
grid.arrange(p1,p2,p3, ncol=1)
bye()
exit
quit
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
library(ggplot2)
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
setwd("~/RProjects/EDA_Course_Materials/lesson5")
ggplot(aes(x = gender, y = age),
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
View(pf)
data = subset(pf, !is.na(gender))) + geom_histogram()
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram(stat ="identity")
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram(stat ="bin")
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_boxplot() +
stat_summary(fun.y = mean, geom='point', shape =4)
?arrange
pf.fc_by_age_gender <- pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
arrange(age)
library(dplyr)
pf.fc_by_age_gender <- pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
arrange(age)
pf.fc_by_age_gender <- pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count)*1.,
n = n()) %>%
arrange(age)
View(pf.fc_by_age_gender)
pf.fc_by_age_gender <- pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count)),
n = n()) %>%
arrange(age)
?ungroup
pf.fc_by_age_gender <- subset(pf, !is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count)),
n = n()) %>%
arrange(age) %>%
ungroup()
View(pf.fc_by_age_gender)
ggplot(aes(age,mean_friend_count), data=pf.fc_by_age_gender) + geom_line()
ggplot(aes(age,mean_friend_count), data=pf.fc_by_age_gender, color=gender) + geom_line()
ggplot(aes(age,mean_friend_count,color=gender), data=pf.fc_by_age_gender, ) + geom_line()
ggplot(aes(age,median_friend_count,color=gender), data=pf.fc_by_age_gender, ) + geom_line()
ggplot(aes(age,median_friend_count,color=gender), data=pf.fc_by_age_gender) + geom_line()
install.packages("tidyr") # only need to run this once
install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
library(tidyr)
library(reshape2)
install.packages(c("codetools", "crayon", "gridExtra", "lattice", "RcppEigen"))
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = 'median_friend_count')
View(pf.fc_by_age_gender.wide)
View(pf.fc_by_age_gender)
View(pf.fc_by_age_gender.wide)
?dcast
?melt
pf.fc_by_age_gender.norm <- melt.data.frame(pf.fc_by_age_gender.wide,
id=c("age","gender"))
pf.fc_by_age_gender.norm <- melt(pf.fc_by_age_gender.wide,
id=c("age","gender"))
View(pf.fc_by_age_gender)
pf.fc_by_age_gender.norm <- melt(pf.fc_by_age_gender.wide,
id=c("age","female", "male"))
View(pf.fc_by_age_gender)
View(pf.fc_by_age_gender.norm)
View(pf.fc_by_age_gender.wide)
View(pf.fc_by_age_gender.norm)
View(pf.fc_by_age_gender.wide)
View(pf.fc_by_age_gender.norm)
pf.fc_by_age_gender.norm <- melt(pf.fc_by_age_gender.wide,
id=c("age","female", "male"),
value.var = 'median_friend_count')
pf.fc_by_age_gender.norm <- melt(pf.fc_by_age_gender.wide,
id=c("age","gender"),
value.var = 'median_friend_count')
pf.fc_by_age_gender.norm <- melt(pf.fc_by_age_gender.wide,
id.vars=c("age","gender"))
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = 'median_friend_count')
pf.fc_by_age_gender.norm <- melt(pf.fc_by_age_gender.wide,
id.vars=c("age","gender"))
id.vars=c("age","gender"))
pf.fc_by_age_gender.norm <- melt(pf.fc_by_age_gender,
id.vars=c("age","gender"))
?spread
View(pf.fc_by_age_gender.wide)
ggplot(aes(age,female/male), data=pf.fc_by_age_gender.wide) + geomline()
library(ggplot2)
ggplot(aes(age,female/male), data=pf.fc_by_age_gender.wide) + geomline()
ggplot(aes(age,female/male), data=pf.fc_by_age_gender.wide) + geom_line()
?geom_hline
ggplot(aes(age,female/male), data=pf.fc_by_age_gender.wide) + geom_line() + geom_hline(position=1)
ggplot(aes(age,female/male), data=pf.fc_by_age_gender.wide) + geom_line() + geom_hline(yintercept=1)
ggplot(aes(age,female/male), data=pf.fc_by_age_gender.wide) + geom_line() + geom_hline(yintercept=1,linetype=2)
ggplot(aes(age,female/male), data=pf.fc_by_age_gender.wide) + geom_line() + geom_hline(yintercept=1,linetype=2,alpha=.3)
View(pf)
?round
pf$year_joined = ceiling(2014 - tenure/365)
pf$year_joined = ceiling(2014 - pf$tenure/365)
View(pf)
pf$year_joined = floor(2014 - pf$tenure/365)
?cut
pf$year_joined.bucke <- cut(pf$year_joined, b=4)
View(pf)
pf$year_joined.bucke <- cut(pf$year_joined, include.lowest = TRUE, b=4)
pf$year_joined.bucke <- cut(pf$year_joined, labels = "(2004, 2009], (2009, 2011], (2011, 2012], (2012, 2014]")
pf$year_joined.bucke <- cut(pf$year_joined, labels = "(2004, 2009], (2009, 2011], (2011, 2012], (2012, 2014]", breaks=4)
pf$year_joined.bucke <- cut(pf$year_joined, labels = "(2004, 2009]", "(2009, 2011]", "(2011, 2012]", "(2012, 2014]", breaks=4)
pf$year_joined.bucke <- cut(pf$year_joined, breaks=seq(2004, 2014, by = 5))
seq(2004, 2014, by = 5)
c(2004, 2009, 2011, 2012, 2014)
pf$year_joined.bucke <- cut(pf$year_joined, breaks=c(2004, 2009, 2011, 2012, 2014))
pf$year_joined.buckte <- cut(pf$year_joined, breaks=c(2004, 2009, 2011, 2012, 2014))
rm pf$year_joined.bucke
rm(pf$year_joined.bucke)
pf$year_joined.bucket <- cut(pf$year_joined, breaks=c(2004, 2009, 2011, 2012, 2014))
ggplot(aes(age,friend_count,color=year_joined.bucket), data=pf) + geom_line( stat = 'summary', fun.y=median)
ggplot(aes(age,friend_count,color=year_joined.bucket), data=subset(pf, ~is.na(pf$year_joined.bucket))) + geom_line( stat = 'summary', fun.y=median)
ggplot(aes(age,friend_count,color=year_joined.bucket), data=subset(pf, !is.na(pf$year_joined.bucket))) + geom_line( stat = 'summary', fun.y=median)
?geom_line
?stat
??stat
?geom_line.stat
??geom_line.stat
# (2) Exclude any users whose year_joined.bucket is NA.
ggplot(aes(age,friend_count,color=year_joined.bucket), data=subset(pf, !is.na(pf$year_joined.bucket))) + geom_line( stat = 'summary', fun.y=median) + geom_line(linetype=2, color='black', stat='summary', fun.y=mean)
ggplot(aes(age,friend_count,color=year_joined.bucket), data=subset(pf, !is.na(pf$year_joined.bucket))) + geom_line( stat = 'summary', fun.y=mean) + geom_line(linetype=2, color='black', stat='summary', fun.y=mean)
friend_rate = with(subset(pf,pf$tenure >= 1), median(friend_count/tenure), max(friend_count/tenure))
friend_rate = with(subset(pf,pf$tenure >= 1), (median(friend_count/tenure), max(friend_count/tenure)))
friend_rate = with(subset(pf,pf$tenure >= 1), median(friend_count/tenure), max(friend_count/tenure))
pf2 =  with(subset(pf,pf$tenure >= 1))
pf2 =  subset(pf,pf$tenure >= 1)
friend_rate = pf2$friend_count/pf2$tenure
summary(friend_rate)
with(subset(pf,pf$tenure >= 1), summary(friend_count/tenure))
ggplot(aes(tenure,friendships_initiated/tenure), data=subset(pf,pf$tenure >= 1)) + geom_line(color=year_joined.bucket)
ggplot(aes(tenure,friendships_initiated/tenure,color=year_joined.bucket), data=subset(pf,pf$tenure >= 1)) + geom_line()
ggplot(aes(tenure,friendships_initiated/tenure,color=year_joined.bucket), data=subset(pf,pf$tenure >= 1)) + geom_line(stat='summary',fun.y=mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 30 * round(tenure / 30), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 90 * round(tenure / 90), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure,
color = year_joined.bucket), data = subset(pf, tenure > 0)) +
geom_smooth()
geom_smooth(method='lm')
ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure,
color = year_joined.bucket), data = subset(pf, tenure > 0)) +
geom_smooth(method='lm')
geom_smooth()
ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure,
color = year_joined.bucket), data = subset(pf, tenure > 0)) +
geom_smooth()
?geom_smooth
ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure,
color = year_joined.bucket), data = subset(pf, tenure > 0)) +
geom_smooth(method='lm')
ggplot(aes(x = tenure, y = friendships_initiated / tenure,
color = year_joined.bucket), data = subset(pf, tenure > 0)) +
geom_smooth(method='lm')
ggplot(aes(x = tenure, y = friendships_initiated / tenure), data = subset(pf, tenure > 0)) + geom_line() + geom_smooth(aes(color = year_joined.bucket))
ggplot(aes(x = tenure, y = friendships_initiated / tenure), data = subset(pf, tenure > 0)) + geom_smooth(aes(color = year_joined.bucket))
yo <- read.csv('yogurt.csv')
View(yo)
str(yo)
names(yo)
yo$id <- factor(yo$id)
str(yo)
qplot(price, data=yo)
qplot(price, data=yo, binwidth=10)
qplot(price, data=yo, binwidth=5)
qplot(price, data=yo, binwidth=20)
qplot(price, data=yo, binwidth=10)
?transform()
?sum
transform(yo, all.purchases = strawberry + blueberry + pina.colada + plain + mixed.berry)
View(yo)
yo2 <-transform(yo, all.purchases = strawberry + blueberry + pina.colada + plain + mixed.berry)
View(yo2)
yo <-transform(yo, all.purchases = strawberry + blueberry + pina.colada + plain + mixed.berry)
rm(yo2)
View(yo)
qplot(time,price, data=yo)
ggplot(aes(time,price), data=yo) + geom_point(alpha=0.3)
ggplot(aes(time,price), data=yo) + geom_point(alpha=0.05)
ggplot(aes(time,price), data=yo) + geom_point(alpha=0.05, position = position_jitter(h=0))
?levels
levels(yo$id)
?geom_point
ggplot(aes(time,price), data = subset(yo, id %in% sample.ids)) + facet_wrap(~id) + geom_line() + geom_point(aes(size=all.purchases), pch=1)
set.seed(4320)
sample.ids <- sample(levels(yo$id), 16)
ggplot(aes(time,price), data = subset(yo, id %in% sample.ids)) + facet_wrap(~id) + geom_line() + geom_point(aes(size=all.purchases), pch=1)
set.seed(1)
sample.ids <- sample(levels(yo$id), 16)
ggplot(aes(time,price), data = subset(yo, id %in% sample.ids)) + facet_wrap(~id) + geom_line() + geom_point(aes(size=all.purchases), pch=1)
levels(yo$id)
?sample
id %in% sample.ids
subset(yo, id %in% sample.ids)
a<-subset(yo, id %in% sample.ids)
View(a)
ggplot(aes(time,price), data = subset(yo, id %in% sample.ids)) + geom_line() + geom_point(aes(size=all.purchases), pch=1)
+ facet_wrap(~id)
ggplot(aes(time,price), data = subset(yo, id %in% sample.ids)) + facet_wrap(~id) + geom_line() + geom_point(aes(size=all.purchases), pch=1)
install.packages('GGally')
library(GGally)
theme_set(theme_minimal(20))
set.seed(1)
pf_subset <- pf[ , c(2:7)]
pf_subset <- pf[, c(2:7)]
pf <-read.csv('pseudo_facebook.tsv', sep='\t')
pf_subset <- pf[, c(2:7)]
names(pf_subset)
ggpairs(pf_subset[sample.int(nrow(pf_subset), 1000), ], axisLabels = 'internal')
nci <- read.table("nci.tsv")
colnames(nci) <- c(1:64)
nci.long.samp <- melt(as.matrix(nci[1:200,]))
names(nci.long.samp) <- c("gene", "case", "value")
head(nci.long.samp)
ggplot(aes(y = gene, x = case, fill = value),
data = nci.long.samp) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c("blue", "red"))(100))
?scale_fill_brewer
ggplot(price,data=diamonds) + geom_histogram(color=cut) + facet_wrap(~color) + scale_fill_brewer(type = 'qual')
data("diamonds")
ggplot(price,data=diamonds) + geom_histogram(color=cut) + facet_wrap(~color) + scale_fill_brewer(type = 'qual')
ggplot(price,data=diamonds) + geom_histogram(color=cut) + facet_wrap(~color) + scale_fill_brewer(type = 'qual')
View(diamonds)
ggplot(aes(price), data=diamonds) + geom_histogram(color=cut) + facet_wrap(~color) + scale_fill_brewer(type = 'qual')
ggplot(aes(price), data=subset(diamonds, ~is.na(price)) + geom_histogram(color=cut) + facet_wrap(~color) + scale_fill_brewer(type = 'qual')
ggplot(aes(price), data=subset(diamonds, ~is.na(price))) + geom_histogram(color=cut) + facet_wrap(~color) + scale_fill_brewer(type = 'qual')
ggplot(aes(price), data=subset(diamonds, ~is.na(price))) + geom_histogram(color=cut, binwidth=250) + facet_wrap(~color) + scale_fill_brewer(type = 'qual')
```
ggplot(aes(price), data=subset(diamonds, !is.na(price))) + geom_histogram(color=cut, binwidth=250) + facet_wrap(~color) + scale_fill_brewer(type = 'qual')
ggplot(aes(price), data=subset(diamonds, !is.na(price) & !is.na(color) )) + geom_histogram(color=diamonds$cut, binwidth=250) + facet_wrap(~color) + scale_fill_brewer(type = 'qual')
ggplot(aes(price), data=subset(diamonds, !is.na(price) & !is.na(color))) + geom_histogram(color=cut, binwidth=250) + facet_wrap(~color) + scale_fill_brewer(type = 'qual')
ggplot(aes(price), data=subset(diamonds, !is.na(price) & !is.na(cut))) + geom_histogram(color=cut, binwidth=250) + facet_wrap(~color) + scale_fill_brewer(type = 'qual')
ggplot(aes(price), data=subset(diamonds, !is.na(price) & !is.na(cut) & !is.na(color))) + geom_histogram(color=cut, binwidth=250) + facet_wrap(~color)
ggplot(aes(price), data=subset(diamonds, !is.na(price) & !is.na(cut) & !is.na(color))) + geom_histogram(color=cut, binwidth=500) + facet_wrap(~color)
ggplot(aes(price), data=subset(diamonds, !is.na(price) & !is.na(cut) & !is.na(color))) + geom_histogram(color=cut, binwidth=1000) + facet_wrap(~color)
ggplot(aes(price), data=subset(diamonds, !is.na(price) & !is.na(cut) & !is.na(color))) + geom_histogram(color=cut, binwidth=2000) + facet_wrap(~color)
ggplot(aes(price), data=subset(diamonds, !is.na(price) & !is.na(cut) & !is.na(color))) + geom_histogram(color=cut, binwidth=2500) + facet_wrap(~color)
?geom_histogram
ggplot(aes(price), data=subset(diamonds, !is.na(price) & !is.na(cut) & !is.na(color))) + geom_histogram(colour=cut, binwidth=2500) + facet_wrap(~color)
ggplot(aes(price), data=subset(diamonds, !is.na(price) & !is.na(cut) & !is.na(color))) + geom_histogram(binwidth=2500) + facet_wrap(~color) + scale_fill_brewer(type = 'qual')
# scale_fill_brewer(type = 'qual')
ggplot(aes(x=price, color=cut), data=subset(diamonds, !is.na(price) & !is.na(cut) & !is.na(color))) + geom_histogram(binwidth=500) + facet_wrap(~color) + scale_fill_brewer(type = 'qual')
ggplot(aes(x=price, color=cut), data=subset(diamonds, !is.na(price) & !is.na(cut) & !is.na(color))) + geom_histogram(binwidth=100) + facet_wrap(~color) + scale_fill_brewer(type = 'qual')
ggplot(aes(x=price), data=subset(diamonds, !is.na(price) & !is.na(cut) & !is.na(color))) + geom_histogram(colour=cut, binwidth=100) + facet_wrap(~color) + scale_fill_brewer(type = 'qual')
ggplot(aes(x=price), data=subset(diamonds, !is.na(price) & !is.na(cut) & !is.na(color))) + geom_histogram(color=cut, binwidth=100) + facet_wrap(~color) + scale_fill_brewer(type = 'qual')
ggplot(aes(x=price, color=cut), data=subset(diamonds, !is.na(price) & !is.na(cut) & !is.na(color))) + geom_histogram(, binwidth=100) + facet_wrap(~color) + scale_fill_brewer(type = 'qual')
ggplot(aes(x=price, color=cut), data=subset(diamonds, !is.na(price) & !is.na(cut) & !is.na(color))) + geom_histogram(, binwidth=50) + facet_wrap(~color) + scale_fill_brewer(type = 'qual')
ggplot(aes(x=price, color=cut), data=subset(diamonds, !is.na(price) & !is.na(cut) & !is.na(color))) + geom_histogram(, binwidth=50) + facet_wrap(~color)
ggplot(aes(x=price, color=cut), data=diamonds) + geom_histogram(, binwidth=50) + facet_wrap(~color)
ggplot(aes(x=price, color=cut), data=diamonds) + geom_histogram(, binwidth=50) + scale_fill_brewer(type = 'qual') + facet_wrap(~color)
ggplot(aes(x=price, color=cut), data=diamonds) + geom_histogram(binwidth=50) + scale_fill_brewer(type = 'qual') + facet_wrap(~color)
ggplot(aes(x=price, color=cut), data=diamonds) + geom_histogram(binwidth=75) + scale_fill_brewer(type = 'qual') + facet_wrap(~color)
# Facet the histogram by diamond color
ggplot(aes(x=table, y=price, color=cut), data=diamonds) + geom_point() + scale_fill_brewer(type = 'qual')
ggplot(aes(x=table, y=price, color=cut), data=diamonds) + geom_point() + scale_fill_brewer(type = 'qual') + xlim(0,80)
ggplot(aes(x=table, y=price, color=cut), data=diamonds) + geom_point() + scale_fill_brewer(type = 'qual') + xlim(50,80)
?by
by(diamonds$ideal, cut, summary)
by(diamonds$ideal, diamonds$cut, summary)
by(subset(diamonds, cut ==ideal), diamonds$table, summary)
by(subset(diamonds, cut =='Ideal'), diamonds$table, summary)
subset(diamonds(diamonds$cut=="Ideal"))
subset(diamonds, diamonds$cut=="Ideal")
by(subset(diamonds, diamonds$cut =='Ideal'), diamonds$table, summary)
by(subset(diamonds$cut, diamonds$table, summary)
by(diamonds$cut, diamonds$table, summary)
by(diamonds$table, diamonds$cut, summary)
ggplot(aes(x=x*y*z, y=price, color=clarity), data=diamonds) + geom_point() + scale_y_log10() + xlim(0, quantile(x*y*z, .99))
?transform
transform(diamonds, volume = x*y*z)
diamonds <- transform(diamonds, volume = x*y*z)
ggplot(aes(x=volume, y=price, color=clarity), data=diamonds) + geom_point() + scale_y_log10() + xlim(0, quantile(volume, .99))
ggplot(aes(x=volume, y=price, color=clarity), data=diamonds) + geom_point() + scale_y_log10() + xlim(0, quantile(diamonds$volume, .99))
ggplot(aes(x=volume, y=price, color=clarity), data=diamonds) + geom_point() + scale_y_log10() + xlim(0, quantile(diamonds$volume, .99)) + scale_color_brewer(type = 'div')
ggplot(aes(x=volume, y=price, color=clarity), data=subset(diamonds, volume>0)) + geom_point() + scale_y_log10() + xlim(0, quantile(diamonds$volume, .99)) + scale_color_brewer(type = 'div')
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
View(pf)
pf <- transform(pf, prop_initiated=friendships_initiated/friend_count )
pf$year_joined = floor(2014-tenure/365.)
pf$year_joined = floor(2014-pf$tenure/365.)
?cut
pf$year_joined.bucket = cut(pf$year_joined, breaks=c(2004,2009,2011,2012,2014))
ggplot(aes(tenure, prop_initiated, year_joined.bucket)) + geom_line(stat='summary', fun.y=median)
str(pf)
ggplot(aes(tenure, prop_initiated, color=year_joined.bucket)) + geom_line(stat='summary', fun.y=median)
ggplot(aes(tenure, prop_initiated, color=year_joined.bucket), data=pf) + geom_line(stat='summary', fun.y=median)
ggplot(aes(tenure, prop_initiated, color=year_joined.bucket), data=pf) + geom_smooth()
ggplot(aes(tenure, prop_initiated), data=pf) + geom_smooth(color=year_joined.bucket)
ggplot(aes(tenure, prop_initiated), data=pf) + geom_smooth(color=pf$year_joined.bucket)
ggplot(aes(tenure, prop_initiated, color=year_joined.bucket), data=pf) + geom_smooth()
ggplot(aes(tenure, prop_initiated), data=pf) + geom_smooth()
ggplot(aes(tenure, prop_initiated, color=year_joined.bucket), data=pf) + geom_smooth()
ggplot(aes(tenure, prop_initiated), data=pf) + geom_smooth()
?geom_smooth
ggplot(aes(tenure, prop_initiated), data=pf) + geom_smooth(colour=year_joined.bucket)
ggplot(aes(tenure, prop_initiated), data=pf) + geom_smooth(colour=pf$year_joined.bucket)
ggplot(aes(tenure, prop_initiated), data=pf) + geom_smooth(method='lm', colour=pf$year_joined.bucket)
ggplot(aes(tenure, prop_initiated), data=pf) + geom_smooth(method='lm')
ggplot(aes(tenure, prop_initiated), data=pf) + geom_smooth(method='rlm')
ggplot(aes(tenure, prop_initiated), data=pf) + geom_smooth(aes(color=year_joined.bucket))
ggplot(aes(tenure, prop_initiated, color=year_joined.bucket), data=subset(pf, !is.na(prop_initiated))) + geom_line(stat='summary', fun.y=median)
ggplot(aes(tenure, prop_initiated), subset(pf, !is.na(prop_initiated))) + geom_smooth(method='lm', aes(color=year_joined.bucket))
ggplot(aes(tenure, prop_initiated), subset(pf, !is.na(prop_initiated))) + geom_smooth(aes(color=year_joined.bucket))
# (2011, 2012]
ggplot(aes(tenure, prop_initiated), subset(pf, !is.na(prop_initiated))) + geom_smooth()
ggplot(aes(tenure, prop_initiated), pf) + geom_smooth()
ggplot(aes(tenure, prop_initiated), data=pf) + geom_smooth()
ggplot(aes(tenure, prop_initiated), data=subset(pf, !is.na(prop_initiated)) + geom_smooth(aes(color=year_joined.bucket))
ggplot(aes(tenure, prop_initiated), data=subset(pf, !is.na(prop_initiated))) + geom_smooth(aes(color=year_joined.bucket))
ggplot(aes(tenure, prop_initiated), data=subset(pf, !is.na(prop_initiated)))) + geom_smooth(aes(color=year_joined.bucket))
ggplot(aes(tenure, prop_initiated), data=subset(pf, !is.na(prop_initiated)))
ggplot(aes(tenure, prop_initiated), data=subset(pf, !is.na(prop_initiated))) + geom_line()
ggplot(aes(tenure, prop_initiated), data=subset(pf, !is.na(prop_initiated))) + geom_smooth(aes(color=year_joined.bucket))
ggplot(aes(tenure, prop_initiated, color=year_joined.bucket), data=subset(pf, !is.na(prop_initiated))) + geom_smooth(
ggplot(aes(tenure, prop_initiated, color=year_joined.bucket), data=subset(pf, !is.na(prop_initiated))) + geom_smooth()
ggplot(aes(tenure, prop_initiated, color=year_joined.bucket), data=subset(pf, !is.na(prop_initiated))) + geom_smooth()
by(pf$prop_initiated, pf$year_joined.bucket, mean)
by(subset(pf, !is.na(prop_initiated).year_joined.bucket, pf$prop_initiated, mean)
by(subset(pf, !is.na(prop_initiated)[year_joined.bucket], pf$prop_initiated, mean)
by(subset(pf, !is.na(prop_initiated))[year_joined.bucket], pf$prop_initiated, mean)
by(subset(pf, !is.na(prop_initiated))['year_joined.bucket'], pf$prop_initiated, mean)
jf = subset(pf, !is.na(prop_initiated))
by(jf$prop_initiated, jf$year_joined.bucket, mean)
ggplot(aes(cut, price/carat, color=color), data=subset(pf, carat>0)) + geom_point() + facet_wrap(~clarity) + scale_color_brewer(type='div')
ggplot(aes(cut, price/carat, color=color), data=subset(pf, pf$carat>0)) + geom_point() + facet_wrap(~clarity) + scale_color_brewer(type='div')
ggplot(aes(cut, price/carat, color=color), data=subset(pf, pf$carat>0)) + geom_point() + facet_wrap(~pf$clarity) + scale_color_brewer(type='div')
ggplot(aes(cut, price/carat, color=color), data=subset(pf, pf$carat>0)) + geom_point() + scale_color_brewer(type='div')
ggplot(aes(cut, price/carat, color=color), data=subset(pf, carat>0)) + geom_point() + scale_color_brewer(type='div')
ggplot(aes(cut, price/carat, color=color), data=subset(diamonds, carat>0)) + geom_point() + facet_wrap(~clarity) + scale_color_brewer(type='div')
ggplot(aes(cut, price/carat, color=color), data=subset(diamonds, carat>0)) + geom_point(position=position_jitter(h=0), alpha=.25) + facet_wrap(~clarity) + scale_color_brewer(type='div')
ggplot(aes(cut, price/carat, color=color), data=subset(diamonds, carat>0)) + geom_point(position=position_jitter(h=0)) + facet_wrap(~clarity) + scale_color_brewer(type='div')
summary(diamonds$price)
summary(diamonds$carat)
ggplot(aes(carat,price), data=diamonds) + geom_point(position=posiiton_jigger(h=0)) + ylim(250, quantile(diamonds$price, .99)) + xlim(0, quantile(diamonds$carat, .99))
ggplot(aes(carat,price), data=diamonds) + geom_point(position=position_jigger(h=0)) + ylim(250, quantile(diamonds$price, .99)) + xlim(0, quantile(diamonds$carat, .99))
?position_jitter
ggplot(aes(carat,price), data=diamonds) + geom_point(position=position_jitter(h=0)) + ylim(250, quantile(diamonds$price, .99)) + xlim(0, quantile(diamonds$carat, .99))
library("scales", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages('scales')
install.packages("scales")
install.packages("MASS")
install.packages("memisc")
install.packages("lattice")
install.packages("car")
lot2)
library(GGally)
library(scales)
library(memisc)
rm(jf)
rm(pf)
set.seed(20022012)
diamond_samp <- diamonds[sample(1:length(diamonds$price), 10000), ]
View(diamond_samp)
?ggpairs
ggpairs(diamond_samp, params = c(shape = I('.'), outlier.shape = I('.')))
library(gridExtra)
plot1 <- qplot(price, diamonds) +
ggtitle('Price')
plot2 <- plot1 +
ggtitle('Price (log10)')
grid.arrange(plot1, plot2, ncol=2)
plot1 <- qplot(price, diamonds) + ggtitle('Price')
??qplot
library(ggplot2)
q
